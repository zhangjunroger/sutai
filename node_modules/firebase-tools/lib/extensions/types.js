"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isExtensionSpec = exports.isResource = exports.isParam = exports.ParamType = exports.FUNCTIONS_V2_RESOURCE_TYPE = exports.FUNCTIONS_RESOURCE_TYPE = exports.Visibility = exports.RegistryLaunchStage = void 0;
var RegistryLaunchStage;
(function (RegistryLaunchStage) {
    RegistryLaunchStage["EXPERIMENTAL"] = "EXPERIMENTAL";
    RegistryLaunchStage["BETA"] = "BETA";
    RegistryLaunchStage["GA"] = "GA";
    RegistryLaunchStage["DEPRECATED"] = "DEPRECATED";
    RegistryLaunchStage["REGISTRY_LAUNCH_STAGE_UNSPECIFIED"] = "REGISTRY_LAUNCH_STAGE_UNSPECIFIED";
})(RegistryLaunchStage = exports.RegistryLaunchStage || (exports.RegistryLaunchStage = {}));
var Visibility;
(function (Visibility) {
    Visibility["UNLISTED"] = "unlisted";
    Visibility["PUBLIC"] = "public";
})(Visibility = exports.Visibility || (exports.Visibility = {}));
exports.FUNCTIONS_RESOURCE_TYPE = "firebaseextensions.v1beta.function";
exports.FUNCTIONS_V2_RESOURCE_TYPE = "firebaseextensions.v1beta.v2function";
var ParamType;
(function (ParamType) {
    ParamType["STRING"] = "STRING";
    ParamType["SELECT"] = "SELECT";
    ParamType["MULTISELECT"] = "MULTISELECT";
    ParamType["SELECT_RESOURCE"] = "SELECT_RESOURCE";
    ParamType["SECRET"] = "SECRET";
})(ParamType = exports.ParamType || (exports.ParamType = {}));
function isObject(value) {
    return typeof value === "object" && value !== null;
}
const isParam = (param) => {
    return (isObject(param) && typeof param["param"] === "string" && typeof param["label"] === "string");
};
exports.isParam = isParam;
const isResource = (res) => {
    return isObject(res) && typeof res["name"] === "string";
};
exports.isResource = isResource;
const isExtensionSpec = (spec) => {
    if (!isObject(spec) || typeof spec.name !== "string" || typeof spec.version !== "string") {
        return false;
    }
    let validResources = true;
    if (spec.resources && Array.isArray(spec.resources)) {
        for (const res of spec.resources) {
            validResources = validResources && (0, exports.isResource)(res);
            if (!validResources) {
                break;
            }
        }
    }
    else {
        return false;
    }
    let validParams = true;
    if (spec.params && Array.isArray(spec.params)) {
        for (const param of spec.params) {
            validParams = validParams && (0, exports.isParam)(param);
            if (!validParams) {
                break;
            }
        }
    }
    else {
        return false;
    }
    let validSysParams = true;
    if (spec.systemParams && Array.isArray(spec.systemParams)) {
        for (const param of spec.systemParams) {
            validSysParams = validSysParams && (0, exports.isParam)(param);
            if (!validSysParams) {
                break;
            }
        }
    }
    else {
        return false;
    }
    return true;
};
exports.isExtensionSpec = isExtensionSpec;
